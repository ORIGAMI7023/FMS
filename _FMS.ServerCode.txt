

# --- appsettings.Development.json ---
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}


# --- appsettings.json ---
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}


# --- FMS.Server.csproj ---
﻿<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ClosedXML" Version="0.105.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="9.0.5" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />
  </ItemGroup>

</Project>


# --- FMS.Server.http ---
@FMS.Server_HostAddress = http://localhost:5008

GET {{FMS.Server_HostAddress}}/weatherforecast/
Accept: application/json

###


# --- Program.cs ---
using FMS.Server.Data;
using Microsoft.EntityFrameworkCore;

namespace FMS.Server
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var builder = WebApplication.CreateBuilder(args);

            // ע
            builder.Services.AddControllers();
            builder.Services.AddEndpointsApiExplorer();
            builder.Services.AddSwaggerGen();
            builder.Services.AddDbContext<AppDbContext>(options =>
                options.UseSqlite("Data Source=fms.db"));

            // ʽ󶨼˿
            builder.WebHost.ConfigureKestrel(options =>
            {
                options.ListenAnyIP(7050); // ȷ󶨵 0.0.0.0:7050
            });

            var app = builder.Build();

            // üַలȫдɱ
            app.Urls.Add("http://0.0.0.0:7050");

            //  Swagger
            if (app.Environment.IsDevelopment())
            {
                app.UseSwagger();
                app.UseSwaggerUI();
            }

            // м
            //app.UseHttpsRedirection();
            app.UseAuthorization();
            app.MapControllers();

            // 
            app.Run();
        }
    }
}



# --- Controllers\AppDbContextFactory.cs ---
﻿using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;

namespace FMS.Server.Data
{
    public class AppDbContextFactory : IDesignTimeDbContextFactory<AppDbContext>
    {
        public AppDbContext CreateDbContext(string[] args)
        {
            var optionsBuilder = new DbContextOptionsBuilder<AppDbContext>();
            optionsBuilder.UseSqlite("Data Source=fms.db");

            return new AppDbContext(optionsBuilder.Options);
        }
    }

}


# --- Controllers\RevenueController.cs ---
    using ClosedXML.Excel;
using DocumentFormat.OpenXml.Wordprocessing;
using FMS.Server.Data;
using FMS.Server.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System.Globalization;

namespace FMS.Server.Controllers;

[ApiController]
[Route("api/revenue")]
public class RevenueController : ControllerBase
{
    private readonly AppDbContext _context;

    public RevenueController(AppDbContext context)
    {
        _context = context;
    }

}


# --- Data\AppDbContext.cs ---
﻿using Microsoft.EntityFrameworkCore;
using FMS.Server.Models;

namespace FMS.Server.Data
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        public DbSet<RevenueRecord> RevenueRecords { get; set; }
    }
}


# --- Migrations\20250521112114_InitialCreate.cs ---
﻿using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace FMS.Server.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "RevenueRecords",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    Date = table.Column<DateTime>(type: "TEXT", nullable: false),
                    Doctor = table.Column<string>(type: "TEXT", nullable: false),
                    Department = table.Column<string>(type: "TEXT", nullable: false),
                    ItemType = table.Column<string>(type: "TEXT", nullable: false),
                    Amount = table.Column<decimal>(type: "TEXT", nullable: false),
                    Source = table.Column<string>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RevenueRecords", x => x.Id);
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "RevenueRecords");
        }
    }
}


# --- Migrations\20250521112114_InitialCreate.Designer.cs ---
﻿// <auto-generated />
using System;
using FMS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMS.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521112114_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FMS.Server.Models.RevenueRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Doctor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueRecords");
                });
#pragma warning restore 612, 618
        }
    }
}


# --- Migrations\20250523100605_AddIsVisitCountField.cs ---
﻿using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace FMS.Server.Migrations
{
    /// <inheritdoc />
    public partial class AddIsVisitCountField : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<string>(
                name: "Doctor",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "TEXT");

            migrationBuilder.AlterColumn<string>(
                name: "Department",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "TEXT");

            migrationBuilder.AddColumn<bool>(
                name: "IsVisitCount",
                table: "RevenueRecords",
                type: "INTEGER",
                nullable: false,
                defaultValue: false);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "IsVisitCount",
                table: "RevenueRecords");

            migrationBuilder.AlterColumn<string>(
                name: "Doctor",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "TEXT",
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Department",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "TEXT",
                oldNullable: true);
        }
    }
}


# --- Migrations\20250523100605_AddIsVisitCountField.Designer.cs ---
﻿// <auto-generated />
using System;
using FMS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMS.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250523100605_AddIsVisitCountField")]
    partial class AddIsVisitCountField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FMS.Server.Models.RevenueRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Doctor")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVisitCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueRecords");
                });
#pragma warning restore 612, 618
        }
    }
}


# --- Migrations\20250524133635_RebuildRevenueStructure.cs ---
﻿using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace FMS.Server.Migrations
{
    /// <inheritdoc />
    public partial class RebuildRevenueStructure : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Department",
                table: "RevenueRecords");

            migrationBuilder.DropColumn(
                name: "Doctor",
                table: "RevenueRecords");

            migrationBuilder.RenameColumn(
                name: "Amount",
                table: "RevenueRecords",
                newName: "Value");

            migrationBuilder.AddColumn<bool>(
                name: "IsExcludedFromSummary",
                table: "RevenueRecords",
                type: "INTEGER",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<string>(
                name: "Owner",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: false,
                defaultValue: "");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "IsExcludedFromSummary",
                table: "RevenueRecords");

            migrationBuilder.DropColumn(
                name: "Owner",
                table: "RevenueRecords");

            migrationBuilder.RenameColumn(
                name: "Value",
                table: "RevenueRecords",
                newName: "Amount");

            migrationBuilder.AddColumn<string>(
                name: "Department",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "Doctor",
                table: "RevenueRecords",
                type: "TEXT",
                nullable: true);
        }
    }
}


# --- Migrations\20250524133635_RebuildRevenueStructure.Designer.cs ---
﻿// <auto-generated />
using System;
using FMS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMS.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524133635_RebuildRevenueStructure")]
    partial class RebuildRevenueStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FMS.Server.Models.RevenueRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExcludedFromSummary")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVisitCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueRecords");
                });
#pragma warning restore 612, 618
        }
    }
}


# --- Migrations\AppDbContextModelSnapshot.cs ---
﻿// <auto-generated />
using System;
using FMS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMS.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FMS.Server.Models.RevenueRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExcludedFromSummary")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVisitCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueRecords");
                });
#pragma warning restore 612, 618
        }
    }
}


# --- Models\ItemTypeStatistics.cs ---
﻿namespace FMS.Server.Models
{
    public class ItemTypeStatistics
    {
        public string itemType { get; set; }
        public decimal totalAmount { get; set; }
    }
}


# --- Models\RevenueRecord.cs ---
using System.ComponentModel.DataAnnotations;

namespace FMS.Server.Models;

public class RevenueRecord
{
    [Key]
    public Guid Id { get; set; }  // 

    public DateOnly Date { get; set; }  // 

    public string Owner { get; set; } = null!;  // ҽ

    public string ItemType { get; set; } = null!;  // ֽҽ˴ε

    public decimal Value { get; set; }  // ˴

    public bool IsVisitCount { get; set; }  // ǷΪ˴

    public bool IsExcludedFromSummary { get; set; }  // Ƿӻų

    public string Source { get; set; }  // Դ磺ServerClientȣ
}
